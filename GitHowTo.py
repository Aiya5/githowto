#GITHOWTO

#1

#cmd-->C:\Users\Гульжан\Desktop\pp2\labka1>

# Создание папки для проекта
#mkdir work
#cd work

# новый HTML файл
#touch hello.html
 
 #touch--> echo

#директорию и файл, который отслеживатся в Git.
#------------------------------------------------------------------------------------------------------------
#2

#git init

#Превращаем текущую папку в Git-репозиторий. Git будет отслеживать изменения файлов.
#-----------------------------------------------------------------------------------------------------------------
#3
#git add hello.html         # Добавляем файл
#git commit -m "Initial Commit"  # Создаем первый коммит с описанием

#Подготовили файл для коммита и зафиксировали состояние проекта.

#----------------------------------------------------------------------------------------------------------------
#4
#Проверка состояния и переименование ветки

#git status                # Проверяем, какие файлы изменены или не отслеживаются
#git branch -m master main # Переименовываем ветку master в main

#Файлы отслеживаются, даем ветке современное имя main.

#----------------------------------------------------------------------------------------------------------------
#5
#Редактирование файла и коммит

#<!-- hello.html -->
#<h1>Hello, World!</h1>

#git add hello.html
#git commit -m "Added standard HTML page tags"

#Внесли первые изменения в HTML и зафиксировали их.

#-------------------------------------------------------------------------------------------------------------
### **6. Просмотр истории коммитов**

#git log                     # Полная история коммитов
#git log --pretty=oneline    # Краткая история в одну строку
#git log --all --pretty=format:"%h %cd %s (%an)" --since="7 days ago"  # Фильтр по времени

#Cпособы просмотра истории изменений проекта.

#-------------------------------------------------------------------------------------------------------------
### **7. Работа с конфигурацией формата логов**

#git config --global format.pretty '%h %ad | %s%d [%an]'
#git config --global log.date short
#git log

#Настраиваем формат отображения истории коммитов для удобства.

#-------------------------------------------------------------------------------------------------------------
#8
#Возврат к предыдущим версиям

#git checkout <hash>    # Переходим к конкретному коммиту по последнему коду коммита
#cat hello.html         # Просматриваем содержимое файла cat---> type
#git switch main        # Возвращаемся в основную ветку

#Можно просматривать состояние проекта в любой точке истории.

#-----------------------------------------------------------------------------------------------------------------
#9 
#Tags


#git log                # Лучше использовать v1~1
#git checkout v1^       # Переходим к коммиту перед тегом
#git tag v1-beta        # Создаем бета-версию
#git checkout v1
#git checkout v1-beta
#git tag                # Просматриваем все теги

#Теги помогают отмечать важные версии проекта.

#-------------------------------------------------------------------------------------------------------------

#10
# Внесение изменений в HTML

#<!-- hello.html -->
#<html>
#  <head></head>
#  <body>
#    <h1>Hello, World!</h1>
#    <!-- This is a bad comment. We want to revert it. -->
#  </body>
#</html>

#git status             # Проверяем изменения
#git restore hello.html # Откатываем изменения в рабочей директории

#Ненужные изменения, их можно легко отменить.

#-------------------------------------------------------------------------------------------------------
#11

# Индексация и отмена индексации

#git add hello.html                
#git restore --staged hello.html    # Убираем изменения из индекса
#git restore hello.html             # Откатываем изменения в файле
#git status                         # Проверяем текущее состояние

#Разделяем работу с индексом и рабочей директорией, чтобы было удобно для управлять изменениями.
